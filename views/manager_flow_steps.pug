extends layout

block content
  div#root
        
    div.row
      div.col-md-2.step-container
        h2.title= title
        p.lead.text-center Available step types do be added to the flow
        each stepType in stepTypes
          div.step-type
            div.btn.btn-secondary
              svg.step-icon
                use(xlink:href=static.root + "/sprite.svg#announcement")
              =stepType.description

      div.col-md-10#flow-container
        h3 Steps
        div#empty-flow.hidden
          h4 You have no steps yet. Start by adding one!

        // Using Vue here
        div#steps.list-group
          //p {{ step }}
          draggable(v-model="steps")
            div.list-group-item(v-for="step in steps")
              span.drag-handle.drag-handle-step ☰
              span.small(style="margin-left: 10px;") {{ step.type_description }}
              // Default "text" input for all types of steps
              div.input-group
                div.input-group-addon
                  i.material-icons.step-type {{ stepTypeIcons[step.step_type_id] }}
                input.form-control.question(type="text", v-model="step.text")

              //
              // Custom stuff depending on the step type
              //
              template(v-if="step.step_type_id === 1")
                //
                // Announcement, nothing to add
                //
              template(v-if="step.step_type_id === 2")
                //
                // Question, nothing to add
                //
              template(v-if="step.step_type_id === 3")
                //
                // Document, add the file picker
                //
                div.input-group
                  input(type="file")

              template(v-if="step.step_type_id === 4")
                //
                // Multiple Choice, add the choices
                //
                div.multiple-choice
                  draggable(v-model="step.step_choices")
                    div.input-group(v-for="(item, index) in step.step_choices")
                      span.drag-handle.drag-handle-multiple-choice ☰
                      //label
                      input.form-control.answer(type="text" v-model="item.text")
                      span.input-group-addon.delete-answer(@click="step.step_choices.splice(index, 1)")
                        i.material-icons delete
                    // TODO: add empty choices if the list is empty?
                  button.btn.btn-secondary(type="button", @click="step.step_choices.push({})") Add answer
                    i.material-icons add

              template(v-if="step.step_type_id === 5")
                //
                // Docusign, nothing to add for now
                //

        // Trigger the modal with a button
        button.btn.btn-info.btn-lg(type="button", data-toggle="modal", data-target="#myModal") Add step

        button#save-steps.btn.btn-primary.hidden(type="button", @click="saveSteps") Save

    // Modal
    div#myModal.modal.fade(role="dialog")
      div.modal-dialog
        // Modal content
        div.modal-content
          div.modal-header
            button.close(type="button" data-dismiss="modal") &times;
            h4.modal-title New step
          div.modal-body
            div.form-group
              label(for="new-step-selector") Type
              select#new-step-selector.form-control(v-model="newStepTypeSelected")
                each stepType in stepTypes
                  option(value=stepType.id)= stepType.description
          div.modal-footer
            button.btn.btn-primary(type="button", @click="addStep(newStepTypeSelected)") Add step
            button.btn.btn-secondary(type="button" data-dismiss="modal") Close

    p(@click="click1()") Debug steps {{steps}}
    div(v-for="step in steps") {{ step }}

  block pageScripts
    script.
      var stepTypesArray = !{JSON.stringify(stepTypes).replace(/<\//g, '<\\/')};
      var stepTypesObj = {};
      stepTypesArray.forEach(function (element) {
        stepTypesObj[element.id] = element;
      });
      console.log(stepTypesObj);
      var flowId = !{flowId}; // used on AJAX requests
    script(src=static.root + '/js/manager_flow_steps.js')
