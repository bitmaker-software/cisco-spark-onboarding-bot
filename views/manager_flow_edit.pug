extends layout

block content
  div#root
        
    div.row
      div.col-md-2.step-container
        h2.title= title
        p.lead.text-center Available step types do be added to the flow
        
        div.step-type(v-for="stepType in stepTypes")
          div.btn.btn-secondary
            svg.step-icon
              use(v-bind="{'xlink:href':'"+static.root +"/sprite.svg#'+stepTypeIcons[stepType.id]}")
              
              // TODO: workaround for now; add column name to the database?
              span {{ stepType.name }}
              

      div.col-md-10.flow-container
        h2.title.text-primary Steps
        div#empty-flow.hidden
          img.illustration(src=static.root + "/images/add.svg")
          h4.text-center You have no steps yet. Start by adding one!

        // Using Vue here
        div#steps.list-group
          //p {{ step }}
          draggable(v-model="steps")
            div.list-group-item.no-gutters(v-for="step in steps")
              div.drag 
                span.drag-handle.drag-handle-step
                  svg.icon
                    use(xlink:href=static.root + "/sprite.svg#drag")
              div.col
                // Default "text" input for all types of steps
                div.input-group
                  div.input-group-addon
                    svg.icon
                      use(v-bind="{'xlink:href':'"+static.root +"/sprite.svg#'+stepTypeIcons[step.step_type_id]}")
                  input.form-control.question(type="text", v-model="step.text")
                //- small {{ step.type_description }}
                //
                // Custom stuff depending on the step type
                //
                template(v-if="step.step_type_id === 1")
                  //
                  // Announcement, nothing to add
                  //
                template(v-if="step.step_type_id === 2")
                  //
                  // Question, nothing to add
                  //
                template(v-if="step.step_type_id === 3")
                  //
                  // Document, add the file picker
                  //
                  div.input-group.file-type
                    input.form-control(type="file")

                template(v-if="step.step_type_id === 4")
                  //
                  // Multiple Choice, add the choices
                  //
                  div.form-group.multiple-choice
                    draggable(v-model="step.step_choices")
                      div.input-group(v-for="(item, index) in step.step_choices")
                        span.drag-handle.drag-handle-multiple-choice.input-group-addon
                          svg.icon
                            use(xlink:href=static.root + "/sprite.svg#drag")
                        //label
                        input.form-control.answer(type="text" v-model="item.text")
                        span.input-group-addon.delete-answer(@click="step.step_choices.splice(index, 1)")
                          i.material-icons delete
                      // TODO: add empty choices if the list is empty?
                    button.btn.btn-outline-primary(type="button", @click="step.step_choices.push({})") Add answer

              template(v-if="step.step_type_id === 5")
                //
                // Docusign, nothing to add for now
                //

        // Trigger the modal with a button
        hr
        div.row
          div.col
            button.btn.btn-outline-primary.btn-lg.mr-4(type="button", data-toggle="modal", data-target="#myModal") Add step
          div.col.text-right
            button#save-steps.btn.btn-primary.btn-lg.hidden(type="button", @click="saveSteps") Save

    // Modal
    div#myModal.modal.fade(role="dialog")
      div.modal-dialog
        // Modal content
        div.modal-content
          div.modal-header
            button.close(type="button" data-dismiss="modal") &times;
            h4.modal-title New step
          div.modal-body
            div.form-group
              label(for="new-step-selector") Type
              select#new-step-selector.form-control(v-model="newStepTypeSelected")
                each stepType in stepTypes
                  option(value=stepType.id)= stepType.description
          div.modal-footer
            button.btn.btn-primary(type="button", @click="addStep(newStepTypeSelected)") Add step
            button.btn.btn-secondary(type="button" data-dismiss="modal") Close

  //- p Debug steps
  //- div(v-for="step in steps", style="padding-top: 20px;") {{ step }}

  block pageScripts
    script.
      var stepTypesArray = !{JSON.stringify(stepTypes).replace(/<\//g, '<\\/')};
      var stepTypesObj = {};
      stepTypesArray.forEach(function (element) {
        stepTypesObj[element.id] = element;
      });
      console.log(stepTypesObj);
      var flowId = !{flowId}; // used on AJAX requests

    script(src=static.root + '/js/manager_flow_steps.js')
